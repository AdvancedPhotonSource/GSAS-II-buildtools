# Compile the GSAS-II binary files on Windows using scons and then upload
# them to the releases area. Uses outputs capability to move the
# output name between steps.

name: Compile Windows
description: compile GSAS-II binaries on Windows

outputs:
  tar-file:
    description: "tar file generated by script"
    value: ${{ steps.compile-step.outputs.tarname }}

runs:
  using: "composite"
  steps:
      - name: install Windows-specific conda package
        shell: bash -l {0}
        run: |
          conda install m2w64-ntldd-git

      - name: compile with scons
        id: compile-step
        shell: bash -l {0}
        run: |
          cd _gsas2/sources
          echo "Windows build"
          scons install=T LIBGFORTRAN=T LIBGCC=T # seems to cause problems on Windows
          #scons install=T LIBGFORTRAN=T
          #scons install=T 
          newdir=`cd ../AllBinaries/; ls -d win*`
          echo Created $newdir

          # copy needed .dll files
          python ../../compile/winLibs.py ../AllBinaries/$newdir
          cd k_vec_cython
          python setup.py build_ext --inplace
          cd ..
          cp k_vec_cython/kvec_general.cp310-win_amd64.pyd ../AllBinaries/$newdir

          # document build  
          echo "Built from G2 version `git log HEAD --oneline | head -1`" >> ../AllBinaries/$newdir/Build.notes.txt
          conda list -f python | tail -1 >> ../AllBinaries/$newdir/Build.notes.txt
          conda list -f numpy | tail -1 >> ../AllBinaries/$newdir/Build.notes.txt
          echo "Using gfortran, info follows" >> ../AllBinaries/$newdir/Build.notes.txt
          gfortran -v 2>> ../AllBinaries/$newdir/Build.notes.txt
          echo "### Dependencies" >> ../AllBinaries/$newdir/Build.notes.txt
          ntldd ../AllBinaries/$newdir/*.pyd >> ../AllBinaries/$newdir/Build.notes.txt
          ntldd ../AllBinaries/$newdir/*.exe >> ../AllBinaries/$newdir/Build.notes.txt
          ntldd ../AllBinaries/$newdir/*.dll >> ../AllBinaries/$newdir/Build.notes.txt

          cp ../AllBinaries/$newdir/Build.notes.txt ../../Build.notes.txt

          # create tar file with binaries
          cd ../AllBinaries/$newdir
          echo "tarname=$(echo $newdir.tgz)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $newdir.tgz)"
          echo creating ../../../$newdir.tgz
          tar cvzf ../../../$newdir.tgz *

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.compile-step.outputs.tarname }}
          tag_name: v1.0.1
