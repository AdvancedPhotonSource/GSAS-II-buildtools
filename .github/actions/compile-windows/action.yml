# Compile the GSAS-II binary files on Windows using scons and then upload
# them to the releases area. Uses outputs capability to move the
# output name between steps.

name: Compile Windows
description: compile GSAS-II binaries on Windows

outputs:
  tar-file:
    description: "tar file generated by script"
    value: ${{ steps.compile-step.outputs.tarname }}

runs:
  using: "composite"
  steps:
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: gcc
          version: 12
      - name: Get GSAS-II sources
        shell: bash -l {0}
        run: |
          newdir=win-1234-abc
          TARFILE=${HOME}/$newdir.tgz
          echo "tarname=$(echo $TARFILE)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $TARFILE)"
          echo creating $TARFILE
          exit
          git clone --depth 50 https://github.com/AdvancedPhotonSource/GSAS-II.git _gsas2
      - name: Set up conda  # note that conda-build-env.yml fixes Python & numpy versions (alas)
        #uses: conda-incubator/setup-miniconda@v3.0.3
        uses: conda-incubator/setup-miniconda@030178870c779d9e5e1b4e563269f3aa69b04081 # v3.0.3 using hash for security
        with:
          activate-environment: build
          environment-file: compile/conda-build-env.yml
          miniforge-version: latest

      - name: compile with scons
        id: compile-step
        shell: bash -l {0}
        run: |
          cd _gsas2/sources
          echo "Windows build"
          #scons install=T LIBGFORTRAN=T LIBGCC=T # seems to cause problems on Linux
          scons install=T
          newdir=`cd ../AllBinaries/; ls -d win*`
          echo Created $newdir

          # copy needed .so files
          #python ../../compile/linuxLibs.py ../AllBinaries/$newdir

          # document build  
          echo "Built from G2 version `git log HEAD --oneline | head -1`" >> ../AllBinaries/$newdir/Build.notes.txt
          conda list -f python | tail -1 >> ../AllBinaries/$newdir/Build.notes.txt
          conda list -f numpy | tail -1 >> ../AllBinaries/$newdir/Build.notes.txt
          echo "Using gfortran, info follows" >> ../AllBinaries/$newdir/Build.notes.txt
          gfortran -v 2>> ../AllBinaries/$newdir/Build.notes.txt
          #echo "### Dependencies" >> ../AllBinaries/$newdir/Build.notes.txt
          #ntldd ../AllBinaries/$newdir/*.so >> ../AllBinaries/$newdir/Build.notes.txt
          #ntldd ../AllBinaries/$newdir/*.exe >> ../AllBinaries/$newdir/Build.notes.txt

          echo "#### Showing Build.notes.txt"
          cat ../AllBinaries/$newdir/Build.notes.txt
  
          # create tar file with binaries
          cd ../AllBinaries/$newdir
          TARFILE=${TEMP}/$newdir.tgz
          echo "tarname=$(echo $TARFILE)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $TARFILE)"
          echo creating $TARFILE
          tar cvzf $TARFILE *

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.compile-step.outputs.tarname }}
          tag_name: v1.0.1

#      # for debug, create a copy of the build directory
#      - name: Save artifact  # creates zip file with directory contents
#        if: failure()
#        uses: actions/upload-pages-artifact@v3
#        with:
#            path: _gsas2
#            name: compile
#            retention-days: 1
