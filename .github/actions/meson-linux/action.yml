# Note this is not used at present. The GH ubuntu runners have a glibc
# version that is way too new for use on Redhat Enterprise workstations
# Building manually using tinodi_build.sh.
#
# Compile the GSAS-II binary files on Linux using meson and then upload
# them to the releases area. Uses GH outputs capability to move the
# output name between steps.

name: Compile Linux w/Meson
description: compile GSAS-II binaries on Linux using newer Pythons

outputs:
  tar-file:
    description: "tar file generated by script"
    value: ${{ steps.compile-step.outputs.tarname }}

runs:
  using: "composite"
  steps:
      - name: compile with meson
        id: compile-step
        shell: bash -l {0}
        run: |
          OUTDIR=./tmp/outfiles
          TARNAME=`python compile/nameTar.py`
          TMPDIR=/tmp/
          TARFILE=${TMPDIR}${TARNAME}
          echo creating ${TARFILE}

          cd _gsas2
          echo "Linux build"
          mkdir ./tmp
          mkdir ${OUTDIR}
          meson setup ./tmp/meson_build
          meson compile -C ./tmp/meson_build
          cp -v ./tmp/meson_build/sources/*.so ${OUTDIR}/
          cp -v ./tmp/meson_build/sources/*/*.so ${OUTDIR}/
          cp -v ./tmp/meson_build/sources/LATTIC ${OUTDIR}/
          cp -v ./tmp/meson_build/sources/convcell ${OUTDIR}/
          cp -v ./tmp/meson_build/sources/GSAS*.txt ${OUTDIR}/
          ls -l ${OUTDIR}/

          # document build  
          echo "Built from G2 version `git log HEAD --oneline | head -1`" >> ${OUTDIR}/Build.notes.txt
          conda list -f python | tail -1 >> ${OUTDIR}/Build.notes.txt
          conda list -f numpy | tail -1 >> ${OUTDIR}/Build.notes.txt
          echo "Using gfortran, info follows" >> ${OUTDIR}/Build.notes.txt
          gfortran -v 2>> ${OUTDIR}/Build.notes.txt
          echo "### Dependencies" >> ${OUTDIR}/Build.notes.txt
          ldd ${OUTDIR}/*.so >> ${OUTDIR}/Build.notes.txt
          ldd ${OUTDIR}/LATTIC >> ${OUTDIR}/Build.notes.txt
          ldd ${OUTDIR}/convcell >> ${OUTDIR}/Build.notes.txt
          echo
          echo "Build notes contents:"
          cat ${OUTDIR}/Build.notes.txt
          echo "Version info:"
          cat ${OUTDIR}/GSAS*.txt

          # copy needed .so files
          python ../compile/linuxLibs.py ${OUTDIR}/

          # create tar file with binaries
          cd ${OUTDIR}
          echo "tarname=$(echo $TARFILE)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $TARFILE)"
          echo creating $TARFILE
          tar cvzf $TARFILE *

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.compile-step.outputs.tarname }}
          tag_name: v1.0.1
