# Compile the GSAS-II binary files on Windows using meson and then upload
# them to the releases area. Uses GH outputs capability to move the
# output name between steps.

name: Compile Windows w/Meson
description: compile GSAS-II binaries on Windows

outputs:
  tar-file:
    description: "tar file generated by script"
    value: ${{ steps.compile-step.outputs.tarname }}

runs:
  using: "composite"
  steps:
      - name: install Windows-specific conda package
        shell: bash -l {0}
        run: |
          conda install m2w64-ntldd-git

      - name: compile with meson
        id: compile-step
        shell: bash -l {0}
        run: |
          cd _gsas2
          OUTDIR=/tmp/outfiles
          TARNAME=`python ../compile/nameTar.py`
          TMPDIR=/tmp/
          TARFILE=${TMPDIR}${TARNAME}
          BLDDIR=/tmp/meson_build
          echo "Windows build"
          mkdir ${OUTDIR}
          meson setup ${BLDDIR} --default-library=static
          meson compile -C ${BLDDIR}
          cp -v ${BLDDIR}/sources/*.pyd ${OUTDIR}/
          #cp -v ${BLDDIR}/sources/*.dll ${OUTDIR}/
          cp -v ${BLDDIR}/sources/*/*.pyd ${OUTDIR}/
          cp -v ${BLDDIR}/sources/*.exe ${OUTDIR}/

          # TODO: better to modify the meson.build to not use
          #   shared libraries (-static-libgfortran -static-libgcc)
          #   on platforms where this is possible. For now -- on Windows -- 
          #   just copy the files we do need
          cp "C:\mingw64\bin\libgfortran-5.dll" ${OUTDIR}
          cp "C:\mingw64\bin\libquadmath-0.dll" ${OUTDIR}
          cp "C:\mingw64\bin\libgcc_s_seh-1.dll" ${OUTDIR}
          cp "C:\mingw64\bin\libwinpthread-1.dll" ${OUTDIR}
          ls -l ${OUTDIR}

          # document build  
          echo "Built from G2 version `git log HEAD --oneline | head -1`" >> ${OUTDIR}/Build.notes.txt
          conda list -f python | tail -1 >> ${OUTDIR}/Build.notes.txt
          conda list -f numpy | tail -1 >> ${OUTDIR}/Build.notes.txt
          echo "Using gfortran, info follows" >> ${OUTDIR}/Build.notes.txt
          gfortran -v 2>> ${OUTDIR}/Build.notes.txt
          cd ${OUTDIR}
          echo "### .pyd Dependencies" >> ${OUTDIR}/Build.notes.txt
          ntldd ${OUTDIR}/*.pyd >> ${OUTDIR}/Build.notes.txt
          echo "### .exe Dependencies" >> ${OUTDIR}/Build.notes.txt
          ntldd ${OUTDIR}/*.exe >> ${OUTDIR}/Build.notes.txt
          echo "### .dll Dependencies" >> ${OUTDIR}/Build.notes.txt
          ntldd ${OUTDIR}/*.dll >> ${OUTDIR}/Build.notes.txt
          echo
          echo "Build notes contents:"
          cat ${OUTDIR}/Build.notes.txt


          # create tar file with binaries. N.B. converting tar name to windows
          cd ${OUTDIR}
          #echo "tarname=$(echo $TARFILE)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $TARFILE)"
          echo creating $TARFILE
          tar cvzf $TARFILE *
          ls -l $TARFILE
          # fix windows name
          WINTARFILE=$(cygpath -w "$TARFILE")
          echo "tarname=$(echo $WINTARFILE)" >> $GITHUB_OUTPUT
          echo "tarname=$(echo $WINTARFILE)"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.compile-step.outputs.tarname }}
          tag_name: v1.0.1

      # - name: Save artifact  # creates zip file with directory contents
      # #   if: failure()
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #       path: /tmp/meson_build
      #       name: meson-build
      #       retention-days: 1
