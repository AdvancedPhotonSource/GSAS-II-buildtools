# GitHub Action script to build GSAS-II binaries using the new meson
# build process. This is needed for Python 3.12+.
#

name: Compile GSAS-II with meson

permissions:
  contents: write
  
on: [workflow_dispatch]

jobs:
  name: Compile GSAS-II (py${{ matrix.python-version }}, on ${{ matrix.os }})

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
#        os: [ubuntu-latest, macos-13, macos-14]
        os: [ubuntu-latest]
#        os: [macos-14]
#        os: [windows-latest]
#        os: [macos-13]
        python-version: ["3.12", "3.13"]

    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get GSAS-II sources
        shell: bash -l {0}
        run: |
          git clone --single-branch --branch develop --depth 50 https://github.com/AdvancedPhotonSource/GSAS-II.git _gsas2
          #git clone --depth 50 https://github.com/AdvancedPhotonSource/GSAS-II.git _gsas2
      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: gcc
          version: 12
 
      - name: Set up conda  # note that conda-build-env.yml fixes Python & numpy versions (alas)
        #uses: conda-incubator/setup-miniconda@v3.0.3
        uses: conda-incubator/setup-miniconda@030178870c779d9e5e1b4e563269f3aa69b04081 # v3.0.3 using hash for security
        with:
          activate-environment: build
          environment-file: compile/conda-build-env-nover.yml
          miniforge-version: latest
          python-version: 3.11

      # - name: Compile MacOS
      #   if: runner.os == 'macOS'
      #   uses: ./.github/actions/compile-mac

      - name: Compile Linux
        if: runner.os == 'Linux'
        uses: ./.github/actions/meson-linux

      # - name: Compile Windows
      #   if: runner.os == 'Windows'
      #   uses: ./.github/actions/compile-windows

      - name: Show Build notes
        shell: bash -l {0}
        run: |
          echo "#### Showing Build.notes.txt"
          cat ./tmp/outfiles/Build.notes.txt

      # if debug needed, create a copy of the build directory
      # - name: Save artifact  # creates zip file with directory contents
      #   if: failure()
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #       path: _gsas2
      #       name: compile
      #       retention-days: 1
