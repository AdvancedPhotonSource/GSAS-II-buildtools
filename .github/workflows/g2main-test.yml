name: CALLED Build & test gsas2main self-installer on all platforms
# Called from .github/workflows/G2main-test_matrix.yml

permissions:
  contents: write

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  build:
    name: gsas2main build on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up conda  # versions here are not tied to what is used for package or installer
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          environment-file: install/GSAS2main/conda-minbuild.yml
          miniforge-version: latest

      - name: regress conda or conda-standalone on Windows
        if: inputs.os == 'windows-latest'
        shell: bash -l {0}
        run: |
          # regress conda or conda-standalone on Windows until constructor 3.11.2 is out
          # do this here so it is not buried in the .yml
          #conda install constructor=3.11.2   
          #conda install constructor=3.9
          conda install conda-standalone=24.9.2 # works with constructor 3.11.1

      - name: create gsas2main conda package
        shell: bash -l {0}
        run: |
          cd install
          if [ "$RUNNER_OS" == "Windows" ]; then
             echo "Windows build"
             python GSAS2main/makeBldFiles.py
             conda config --set anaconda_upload yes
             conda build GSAS2main --output-folder C:/tmp/builds --user briantoby  --token ${{ secrets.ANACONDA_TOKEN }}
          else
             echo "Unix build"
             python GSAS2main/makeBldFiles.py
             conda build GSAS2main --output-folder ~/build # use below due to patch above
             #conda build GSAS2main --output-folder ~/build --package-format .conda
             anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload ~/build/*/*.conda --user briantoby --force
          fi

      - name: create gsas2main self-installer
        shell: bash -l {0}
        run: |
          cd install
          constructor GSAS2main
          #conda list

      # Now have a gsas2main-####-<platform>.sh/.exe 
      # file in install dir, dup with name as -Latest- 
      - name: duplicate upload on Unixes
        shell: bash -l {0}
        if: inputs.os != 'windows-latest'
        run: |
          cd install
          cp -v *.sh `ls gsas2main-*.sh | sed -e s/-[0-9]*-/-Latest-/`
      - name: duplicate on Windows
        if: inputs.os == 'windows-latest'
        run: copy install/*.exe install/gsas2main-Latest-Windows-x86_64.exe 

      # Now have above and gsas2main-Latest-<platform>.sh/.exe 
      # file in install. Upload to the Assets area:
      #    https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/latest
      #
      - name: Release on Unix
        uses: softprops/action-gh-release@v2
        if: inputs.os != 'windows-latest'
        with:
          files: install/*.sh
          tag_name: v1.0.1
      - name: Release on Windows
        uses: softprops/action-gh-release@v2
        if: inputs.os == 'windows-latest'
        with:
          files: install/*.exe
          tag_name: v1.0.1

  # start testing 
  job2:
    name: test on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    needs: build
    steps:

      - uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0
        if: runner.os == 'Windows'
        id: downloadfile
        with:
          url: "https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/gsas2main-Latest-Windows-x86_64.exe"
          #target: download/
      - name: GSAS-II install Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: Start-Process -FilePath .\gsas2main-Latest-Windows-x86_64.exe -ArgumentList "/S /AddToPath=1 " -NoNewWindow -Wait
        
      - name: GSAS-II all tests, Windows
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call C:\ProgramData\gsas2main\Scripts\activate
          call conda install --quiet -y pytest
          python -m pytest C:/ProgramData/gsas2main/GSAS-II

      # GSAS-II install & test Linux/Mac
      - name: download, install G2, pytest & test on unixes
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if [ "${{ inputs.os }}" == "ubuntu-latest" ]; then
             dfil="gsas2main-Latest-Linux-x86_64.sh"
          elif [ "${{ inputs.os }}" == "macos-13" ]; then
             dfil="gsas2main-Latest-MacOSX-x86_64.sh"
          elif [ "${{ inputs.os }}" == "macos-14" ]; then
             dfil="gsas2main-Latest-MacOSX-arm64.sh"
          else
             dfil="?"
          fi
          curl -s -L -o /tmp/${dfil} https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/${dfil}
          bash /tmp/${dfil} -p /tmp/gsas2main -b
          source /tmp/gsas2main/bin/activate
          conda install --quiet -y pytest
          source /tmp/gsas2main/bin/activate
          cd /tmp/gsas2main/GSAS-II
          python -m pytest
