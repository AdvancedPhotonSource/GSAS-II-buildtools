name: RHEL Build & test gsas2new self-installer

permissions:
  contents: write

on:
  workflow_dispatch:   # nice for debugging
  
  push:
    branches: [ "main" ]
    paths:                  # want this to run only when files relevant to
                            # package build change
      - install/gitcompile.py
      - install/GSAS2new/*
      
  #repository_dispatch: # TODO: launch from GSASII repo via Web API

jobs:
  build:
    name: gsas2new build on RHEL
    runs-on: self-hosted
    steps:
      # - name: create Python run environment
      #   shell: bash -l {0}
      #   run: |
      #     source /local/bht/mf3/bin/activate
      #     conda create -p /local/bht/py313-run python=3.13 numpy=2.2 \
      #       wxpython pyopengl PyCifRW pillow gitpython matplotlib scipy \
      #       conda requests h5py imageio zarr xmltodict pybaselines seekpath \
      #       pytest -y -c conda-forge --quiet
      #     source /local/bht/py313-run/bin/activate
      #     which python
      #     python -VV

      # - name: create Python build environment
      #   shell: bash -l {0}
      #   run: |
      #     source /local/bht/mf3/bin/activate
      #     conda create -p /local/bht/py313-build python=3.13 numpy=2.2 \
      #       gitpython cython meson conda-build anaconda-client -y -c conda-forge --quiet
      #     source /local/bht/py313-build/bin/activate
      #     which python
      #     which meson
      #     python -VV

      - name: clone build repo
        shell: bash -l {0}
        run: |
          rm -rf /local/bht/buildtools
          git clone https://github.com/AdvancedPhotonSource/GSAS-II-buildtools.git --depth 1 /local/bht/buildtools

      # skip this: builds GSAS-II but not of use for packaging
      # - name: setup for build
      #   shell: bash -l {0}
      #   run: |
      #     source /local/bht/py313/bin/activate
      #     mkdir -p /local/bht/build-tmp
      #     cd /local/bht/build-tmp
      ##     curl -L -O https://raw.githubusercontent.com/AdvancedPhotonSource/GSAS-II-buildtools/refs/heads/main/install/gitcompile.py
      #     cp /local/bht/buildtools/install/gitcompile.py .
      #     python gitcompile.py --noshortcut --noprogress

      - name: create gsas2new conda package
        shell: bash -l {0}
        run: |
          rm -rf /local/bht/conda-build
          source /local/bht/py313-build/bin/activate
          cd /local/bht/buildtools/install/GSAS2new
          # kludge build.sh
          conda config --set anaconda_upload yes
          conda build RHEL --output-folder /local/bht/conda-build -c conda-forge
          #anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload ~/build/*/*.conda --user briantoby  --token ${{ secrets.ANACONDA_TOKEN }}

  #     - name: create gsas2new self-installer
  #       shell: bash -l {0}
  #       run: |
  #         cd install
  #         constructor GSAS2new
  #         #conda list

  #     # Now have a gsas2new-####-<platform>.sh/.exe 
  #     # file in install dir, dup with name as -Latest- 
  #     - name: duplicate upload on Unixes
  #       shell: bash -l {0}
  #       if: inputs.os != 'windows-latest'
  #       run: |
  #         cd install
  #         cp -v *.sh `ls gsas2new-*.sh | sed -e s/-[0-9]*-/-Latest-/`
  #     - name: duplicate on Windows
  #       if: inputs.os == 'windows-latest'
  #       run: copy install/*.exe install/gsas2new-Latest-Windows-x86_64.exe 

  #     # Now have above and gsas2new-Latest-<platform>.sh/.exe 
  #     # file in install. Upload to the Assets area:
  #     #    https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/latest
  #     #
  #     - name: Release on Unix
  #       uses: softprops/action-gh-release@v2
  #       if: inputs.os != 'windows-latest'
  #       with:
  #         files: install/*.sh
  #         tag_name: v1.0.1
  #     - name: Release on Windows
  #       uses: softprops/action-gh-release@v2
  #       if: inputs.os == 'windows-latest'
  #       with:
  #         files: install/*.exe
  #         tag_name: v1.0.1

  # # start testing 
  # job2:
  #   name: test on ${{ inputs.os }}
  #   runs-on: ${{ inputs.os }}
  #   needs: build
  #   steps:

  #     - uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0
  #       if: runner.os == 'Windows'
  #       id: downloadfile
  #       with:
  #         url: "https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/gsas2new-Latest-Windows-x86_64.exe"
  #         #target: download/
  #     - name: GSAS-II install Windows
  #       if: runner.os == 'Windows'
  #       shell: pwsh
  #       run: Start-Process -FilePath .\gsas2new-Latest-Windows-x86_64.exe -ArgumentList "/S /AddToPath=1 " -NoNewWindow -Wait
        
  #     - name: GSAS-II all tests, Windows
  #       if: runner.os == 'Windows'
  #       shell: cmd
  #       run: |
  #         call C:\ProgramData\gsas2new\Scripts\activate
  #         call conda install --quiet -y pytest
  #         python -m pytest C:/ProgramData/gsas2new/GSAS-II

  #     # GSAS-II install & test Linux/Mac
  #     - name: download, install G2, pytest & test on unixes
  #       if: runner.os != 'Windows'
  #       shell: bash
  #       run: |
  #         if [ "${{ inputs.os }}" == "ubuntu-latest" ]; then
  #            dfil="gsas2new-Latest-Linux-x86_64.sh"
  #         elif [ "${{ inputs.os }}" == "macos-13" ]; then
  #            dfil="gsas2new-Latest-MacOSX-x86_64.sh"
  #         elif [ "${{ inputs.os }}" == "macos-14" ]; then
  #            dfil="gsas2new-Latest-MacOSX-arm64.sh"
  #         else
  #            dfil="?"
  #         fi
  #         curl -s -L -o /tmp/${dfil} https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/${dfil}
  #         bash /tmp/${dfil} -p /tmp/gsas2new -b
  #         source /tmp/gsas2new/bin/activate
  #         conda install --quiet -y pytest
  #         source /tmp/gsas2new/bin/activate
  #         cd /tmp/gsas2new/GSAS-II
  #         python -m pytest
  
      # - name: cleanup build area
      #   shell: bash -l {0}
      #   run: |
      #     rm -rf /local/bht/build-tmp
