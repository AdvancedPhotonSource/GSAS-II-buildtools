name: RHEL Build & test gsas2new self-installer

permissions:
  contents: write

on:
  workflow_dispatch:   # nice for debugging
  
  push:
    branches: [ "main" ]
    paths:                  # want this to run only when files relevant to
                            # package build change
      - install/gitcompile.py
      - install/GSAS2new/*
      
  #repository_dispatch: # TODO: launch from GSASII repo via Web API

jobs:
  build:
    name: gsas2new build on RHEL
    runs-on: self-hosted
    steps:
      - name: setup for build
        shell: bash -l {0}
        run: |
          mkdir -p /local/bht/build
          cd /local/bht/build
          source /local/bht/mf3/bin/activate

      - name: create Python environment
        shell: bash -l {0}
        run: |
          source /local/bht/mf3/bin/activate
          conda create -p /local/bht/py313 python=3.13 numpy=2.2 \
            wxpython pyopengl PyCifRW pillow gitpython matplotlib scipy \
            conda requests h5py imageio zarr xmltodict pybaselines seekpath \
            cython meson -y
          source /local/bht/py313/bin/activate
          which python
          which meson
          python -VV
          
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up conda  # versions here are not tied to what is used for package or installer
  #       #uses: conda-incubator/setup-miniconda@v3.0.3
  #       uses: conda-incubator/setup-miniconda@030178870c779d9e5e1b4e563269f3aa69b04081 # v3.0.3 using hash for security
  #       with:
  #         activate-environment: build
  #         environment-file: install/GSAS2new/conda-minbuild.yml
  #         miniforge-version: latest

  #     - name: regress conda or conda-standalone on Windows
  #       if: inputs.os == 'windows-latest'
  #       shell: bash -l {0}
  #       run: |
  #         # regress conda or conda-standalone on Windows until constructor 3.11.2 is out
  #         # do this here so it is not buried in the .yml
  #         #conda install constructor=3.11.2   
  #         #conda install constructor=3.9
  #         conda install conda-standalone=24.9.2 # works with constructor 3.11.1

  #     - name: create gsas2new conda package
  #       shell: bash -l {0}
  #       run: |
  #         cd install
  #         if [ "$RUNNER_OS" == "Windows" ]; then
  #            echo "Windows build"
  #            python GSAS2new/makeBldFiles.py
  #            conda config --set anaconda_upload yes
  #            conda build GSAS2new --output-folder C:/tmp/builds --user briantoby  --token ${{ secrets.ANACONDA_TOKEN }}
  #         else
  #            echo "Unix build"
  #            python GSAS2new/makeBldFiles.py
  #            conda build GSAS2new --output-folder ~/build # use below due to patch above
  #            #conda build GSAS2new --output-folder ~/build --package-format .conda
  #            anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload ~/build/*/*.conda --user briantoby --force
  #         fi

  #     - name: create gsas2new self-installer
  #       shell: bash -l {0}
  #       run: |
  #         cd install
  #         constructor GSAS2new
  #         #conda list

  #     # Now have a gsas2new-####-<platform>.sh/.exe 
  #     # file in install dir, dup with name as -Latest- 
  #     - name: duplicate upload on Unixes
  #       shell: bash -l {0}
  #       if: inputs.os != 'windows-latest'
  #       run: |
  #         cd install
  #         cp -v *.sh `ls gsas2new-*.sh | sed -e s/-[0-9]*-/-Latest-/`
  #     - name: duplicate on Windows
  #       if: inputs.os == 'windows-latest'
  #       run: copy install/*.exe install/gsas2new-Latest-Windows-x86_64.exe 

  #     # Now have above and gsas2new-Latest-<platform>.sh/.exe 
  #     # file in install. Upload to the Assets area:
  #     #    https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/latest
  #     #
  #     - name: Release on Unix
  #       uses: softprops/action-gh-release@v2
  #       if: inputs.os != 'windows-latest'
  #       with:
  #         files: install/*.sh
  #         tag_name: v1.0.1
  #     - name: Release on Windows
  #       uses: softprops/action-gh-release@v2
  #       if: inputs.os == 'windows-latest'
  #       with:
  #         files: install/*.exe
  #         tag_name: v1.0.1

  # # start testing 
  # job2:
  #   name: test on ${{ inputs.os }}
  #   runs-on: ${{ inputs.os }}
  #   needs: build
  #   steps:

  #     - uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0
  #       if: runner.os == 'Windows'
  #       id: downloadfile
  #       with:
  #         url: "https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/gsas2new-Latest-Windows-x86_64.exe"
  #         #target: download/
  #     - name: GSAS-II install Windows
  #       if: runner.os == 'Windows'
  #       shell: pwsh
  #       run: Start-Process -FilePath .\gsas2new-Latest-Windows-x86_64.exe -ArgumentList "/S /AddToPath=1 " -NoNewWindow -Wait
        
  #     - name: GSAS-II all tests, Windows
  #       if: runner.os == 'Windows'
  #       shell: cmd
  #       run: |
  #         call C:\ProgramData\gsas2new\Scripts\activate
  #         call conda install --quiet -y pytest
  #         python -m pytest C:/ProgramData/gsas2new/GSAS-II

  #     # GSAS-II install & test Linux/Mac
  #     - name: download, install G2, pytest & test on unixes
  #       if: runner.os != 'Windows'
  #       shell: bash
  #       run: |
  #         if [ "${{ inputs.os }}" == "ubuntu-latest" ]; then
  #            dfil="gsas2new-Latest-Linux-x86_64.sh"
  #         elif [ "${{ inputs.os }}" == "macos-13" ]; then
  #            dfil="gsas2new-Latest-MacOSX-x86_64.sh"
  #         elif [ "${{ inputs.os }}" == "macos-14" ]; then
  #            dfil="gsas2new-Latest-MacOSX-arm64.sh"
  #         else
  #            dfil="?"
  #         fi
  #         curl -s -L -o /tmp/${dfil} https://github.com/AdvancedPhotonSource/GSAS-II-buildtools/releases/download/v1.0.1/${dfil}
  #         bash /tmp/${dfil} -p /tmp/gsas2new -b
  #         source /tmp/gsas2new/bin/activate
  #         conda install --quiet -y pytest
  #         source /tmp/gsas2new/bin/activate
  #         cd /tmp/gsas2new/GSAS-II
  #         python -m pytest
